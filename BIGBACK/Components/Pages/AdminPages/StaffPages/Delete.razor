@page "/staff/delete"
@using Microsoft.EntityFrameworkCore
@using BIGBACK.Domain
@inject IDbContextFactory<BIGBACK.Data.BIGBACKContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete Staff</PageTitle>

<div class="container mt-5">
    <div class="text-center">
        <h2 class="text-danger"><i class="fas fa-exclamation-triangle"></i> Confirm Deletion</h2>
        <p class="lead">Are you sure you want to delete this staff member?</p>
    </div>

    <hr class="mb-4" />

    @if (staff is null)
    {
        <div class="alert alert-info text-center">
            <i class="fas fa-spinner fa-spin"></i> Loading staff details...
        </div>
    }
    else
    {
        <div class="card shadow-lg">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3 text-center">
                        <i class="fas fa-user-tie fa-7x text-secondary"></i>
                        <h4 class="mt-3 text-dark">@staff.StaffName</h4>
                        <span class="badge bg-danger">Marked for Deletion</span>
                    </div>
                    <div class="col-md-9">
                        <dl class="row">
                            <dt class="col-sm-3 fw-bold">📧 Email:</dt>
                            <dd class="col-sm-9">@staff.StaffEmail</dd>

                            <dt class="col-sm-3 fw-bold">📞 Phone:</dt>
                            <dd class="col-sm-9">@staff.StaffContact</dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>

        <EditForm Model="staff" OnValidSubmit="DeleteStaff" FormName="delete">
            <div class="d-flex justify-content-center mt-4">
                <button type="submit" class="btn btn-danger btn-lg me-3" disabled="@(staff is null)">
                    <i class="fas fa-trash"></i> Confirm Delete
                </button>
                <a href="/staff" class="btn btn-secondary btn-lg">
                    <i class="fas fa-arrow-left"></i> Cancel
                </a>
            </div>
        </EditForm>
    }
</div>

@code {
    private Staff? staff;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        staff = await context.Staff.FirstOrDefaultAsync(m => m.Id == Id);

        if (staff is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteStaff()
    {
        using var context = DbFactory.CreateDbContext();
        context.Staff.Remove(staff!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/staff");
    }
}
