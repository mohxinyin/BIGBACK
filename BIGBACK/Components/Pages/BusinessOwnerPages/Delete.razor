@page "/businessowners/delete"
@using Microsoft.EntityFrameworkCore
@using BIGBACK.Domain
@inject IDbContextFactory<BIGBACK.Data.BIGBACKContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>BusinessOwner</h2>
    <hr />
    @if (businessowner is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">BusinessOwnerName</dt>
            <dd class="col-sm-10">@businessowner.BusinessOwnerName</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BusinessOwnerrContact</dt>
            <dd class="col-sm-10">@businessowner.BusinessOwnerrContact</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BusinessOwnerEmail</dt>
            <dd class="col-sm-10">@businessowner.BusinessOwnerEmail</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BusinessOwnerGender</dt>
            <dd class="col-sm-10">@businessowner.BusinessOwnerGender</dd>
        </dl>
        <EditForm method="post" Model="businessowner" OnValidSubmit="DeleteBusinessOwner" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(businessowner is null)">Delete</button> |
            <a href="/businessowners/details">Back</a>
        </EditForm>
    }
</div>

@code {
    private BusinessOwner? businessowner;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        businessowner = await context.BusinessOwner.FirstOrDefaultAsync(m => m.Id == Id);

        if (businessowner is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteBusinessOwner()
    {
        using var context = DbFactory.CreateDbContext();
        context.BusinessOwner.Remove(businessowner!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/businessowners/details");
    }
}
