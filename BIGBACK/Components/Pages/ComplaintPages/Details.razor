@page "/complaints/details"
@using Microsoft.EntityFrameworkCore
@using BIGBACK.Domain
@inject IDbContextFactory<BIGBACK.Data.BIGBACKContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Complaint</h2>
    <hr />
    @if (complaint is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">ComplaintID</dt>
            <dd class="col-sm-10">@complaint.ComplaintID</dd>
            <dt class="col-sm-2">OrderID</dt>
            <dd class="col-sm-10">@complaint.OrderID</dd>
            <dt class="col-sm-2">StaffID</dt>
            <dd class="col-sm-10">@complaint.StaffID</dd>
            <dt class="col-sm-2">RiderID</dt>
            <dd class="col-sm-10">@complaint.RiderID</dd>
            <dt class="col-sm-2">ComplaintDesc</dt>
            <dd class="col-sm-10">@complaint.ComplaintDesc</dd>
            <dt class="col-sm-2">ComplaintStatus</dt>
            <dd class="col-sm-10">@complaint.ComplaintStatus</dd>
            <dt class="col-sm-2">ComplaintDateTime</dt>
            <dd class="col-sm-10">@complaint.ComplaintDateTime</dd>
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@complaint.DateCreated</dd>
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@complaint.DateUpdated</dd>
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@complaint.CreatedBy</dd>
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@complaint.UpdatedBy</dd>
        </dl>
        <div>
            <a href="@($"/complaints/edit?id={complaint.Id}")">Edit</a> |
            <a href="@($"/complaints")">Back to List</a>
        </div>
    }
</div>

@code {
    private Complaint? complaint;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        complaint = await context.Complaint.FirstOrDefaultAsync(m => m.Id == Id);

        if (complaint is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
