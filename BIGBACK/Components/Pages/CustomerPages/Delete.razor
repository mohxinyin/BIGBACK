@page "/customer/delete/{id:int}"

@using Microsoft.EntityFrameworkCore
@using BIGBACK.Domain
@inject IDbContextFactory<BIGBACK.Data.BIGBACKContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete Customer</PageTitle>

<div class="container mt-5">
    <div class="text-center">
        <h1 class="display-5 fw-bold text-danger">🗑️ Delete Customer</h1>
        <p class="text-danger fw-semibold mt-3 fs-5">
            ⚠️ Are you sure you want to delete this customer? This action cannot be undone.
        </p>
    </div>

    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-lg border-danger">
                <div class="card-body p-4">
                    @if (customer is null)
                    {
                        <p class="text-center"><em>Loading...</em></p>
                    }
                    else
                    {
                        <dl class="row">
                            <dt class="col-sm-4 text-muted">Name:</dt>
                            <dd class="col-sm-8 fw-bold">@customer.CustomerName</dd>

                            <dt class="col-sm-4 text-muted">Mobile Number:</dt>
                            <dd class="col-sm-8">@customer.CustomerMobileNumber</dd>

                            <dt class="col-sm-4 text-muted">Email:</dt>
                            <dd class="col-sm-8">@customer.CustomerEmail</dd>

                            <dt class="col-sm-4 text-muted">Gender:</dt>
                            <dd class="col-sm-8">@customer.CustomerGender</dd>

                            <dt class="col-sm-4 text-muted">Address:</dt>
                            <dd class="col-sm-8">@customer.CustomerAddress</dd>
                        </dl>

                        <EditForm method="post" Model="customer" OnValidSubmit="DeleteCustomer" FormName="delete" Enhance>
                            <div class="text-center mt-4">
                                <button type="submit" class="btn btn-danger px-4 py-2" onclick="return confirm('⚠️ Are you sure you want to delete this customer? This action cannot be undone.');">
                                    ❌ Delete
                                </button>
                                <a href="/customer/profile" class="btn btn-secondary px-4 py-2 ms-2">⬅️ Back</a>
                            </div>
                        </EditForm>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Customer? customer;

    [Parameter]
    public int Id { get; set; }  // ✅ Ensures ID is correctly retrieved from URL

    protected override async Task OnInitializedAsync()
    {
        Console.WriteLine($"🔍 DEBUG: Fetching Customer ID {Id}");

        using var context = DbFactory.CreateDbContext();
        customer = await context.Customer.FirstOrDefaultAsync(m => m.Id == Id);

        if (customer is null)
        {
            Console.WriteLine($"❌ ERROR: No customer found with ID {Id}");
            NavigationManager.NavigateTo("/notfound");
        }
        else
        {
            Console.WriteLine($"✅ SUCCESS: Loaded Customer {customer.CustomerName}");
        }
    }

    private async Task DeleteCustomer()
    {
        if (customer is null)
        {
            Console.WriteLine("❌ ERROR: Customer object is null.");
            return;
        }

        using var context = DbFactory.CreateDbContext();
        context.Customer.Remove(customer);
        await context.SaveChangesAsync();

        Console.WriteLine($"✅ SUCCESS: Deleted Customer {customer.CustomerName}");
        NavigationManager.NavigateTo("/customer/profile");
    }
}
