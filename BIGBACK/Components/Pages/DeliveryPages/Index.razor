@page "/deliveries"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BIGBACK.Domain
@using BIGBACK.Data
@implements IAsyncDisposable
@inject IDbContextFactory<BIGBACK.Data.BIGBACKContext> DbFactory

<PageTitle>Delivery List</PageTitle>

<h1>Index</h1>

<AuthorizeView Roles="Administrator,BusinessOwner">
    <a href="deliveries/create" class="btn btn-primary">Create New Delivery</a>
</AuthorizeView>



<QuickGrid Class="table" Items="context.Delivery">
    <PropertyColumn Property="delivery => delivery.DeliveryTime" />
    <PropertyColumn Property="delivery => delivery.DeliveryDate" />
    @* <PropertyColumn Property="delivery => delivery.CustomerID" />
    <PropertyColumn Property="delivery => delivery.OrderID" />
    <PropertyColumn Property="delivery => delivery.BusinessID" /> *@
    <PropertyColumn Property="delivery => delivery.DeliveryFee" />
    <PropertyColumn Property="delivery => delivery.DeliveryStatus" />

    <PropertyColumn Property="delivery => delivery.Business.BusinessName" Title="BusinessName" />
    <PropertyColumn Property="delivery => delivery.Customer.CustomerName" Title="CustomerName" />
    <PropertyColumn Property="delivery => delivery.Customer.CustomerAddress" Title="CustomerAddress" />
    <PropertyColumn Property="delivery => delivery.Order.OrderTotal" Title="OrderTotal" />
    <PropertyColumn Property="delivery => delivery.Order.OrderStatus" Title="OrderStatus" />

    <PropertyColumn Property="delivery => delivery.DeliveryRider.Rider.RiderName" Title="RiderName" />

    <TemplateColumn Context="delivery">
        <AuthorizeView Roles="Administrator,BusinessOwner">
            <a href="@($"deliveries/edit?id={delivery.Id}")" class="btn btn-warning btn-sm">Edit</a> 
            <a href="@($"deliveries/delete?id={delivery.Id}")" class="btn btn-danger btn-sm">Delete</a>
        </AuthorizeView>
        <a href="@($"deliveries/details?id={delivery.Id}")" class="btn btn-info btn-sm">Details</a>

    </TemplateColumn>
</QuickGrid>

@code {
    private BIGBACKContext context = default!;
    private List<Delivery> deliveries = new();

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();

        // Eagerly load related entities, including the DeliveryRider and Rider
        deliveries = context.Delivery
            .Include(d => d.Customer)
            .Include(d => d.Order)
            .Include(d => d.Business)
            .Include(d => d.DeliveryRider)    // Include the DeliveryRider
                .ThenInclude(dr => dr.Rider)  // Then include the Rider from DeliveryRider
            .ToList();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
