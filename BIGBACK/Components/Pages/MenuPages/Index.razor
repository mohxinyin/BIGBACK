@page "/menus"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.QuickGrid
@using BIGBACK.Domain
@using BIGBACK.Data
@implements IAsyncDisposable
@inject IDbContextFactory<BIGBACK.Data.BIGBACKContext> DbFactory



<PageTitle>Index</PageTitle>

<h1>Menu List</h1>

<p>
    <a href="menus/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.Menu">
    <PropertyColumn Property="menu => menu.MenuName" />
    @* <PropertyColumn Property="menu => menu.BusinessId" /> *@
    <PropertyColumn Property="menu => menu.MenuCategory" />

    <PropertyColumn Property="menu => menu.Business.BusinessName" Title="BusinessName" />
    <PropertyColumn Property="menu => menu.Business.BusinessRating" Title="BusinessRating" />

    <TemplateColumn Context="menu">
        <a href="@($"menus/edit?id={menu.Id}")">Edit</a> |
        <a href="@($"menus/details?id={menu.Id}")">Details</a> 
        <AuthorizeView Roles="Administrator">
            | <a href="@($"menus/delete?id={menu.Id}")">Delete</a>
        </AuthorizeView>
    </TemplateColumn>
</QuickGrid>

@code {
    private BIGBACKContext context = default!;
    private List<Menu> menus = new();

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();

        // Eagerly load related Business entity
        menus = context.Menu
            .Include(m => m.Business) // Load Business to access BusinessName and BusinessRating
            .ToList();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
