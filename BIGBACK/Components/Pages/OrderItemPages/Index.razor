@page "/orderitems"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BIGBACK.Domain
@using BIGBACK.Data
@implements IAsyncDisposable
@inject IDbContextFactory<BIGBACK.Data.BIGBACKContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>OrderItem List</h1>

<p>
    <a href="orderitems/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.OrderItem">
    <PropertyColumn Property="orderitem => orderitem.OrderItemQty" />
    <PropertyColumn Property="orderitem => orderitem.OrderItemPromo" />
    @* <PropertyColumn Property="orderitem => orderitem.OrderId" />
    <PropertyColumn Property="orderitem => orderitem.MenuItemId" /> *@

    <PropertyColumn Property="orderitem => orderitem.MenuItem.MenuItemName" Title="MenuItemName" />
    <PropertyColumn Property="orderitem => orderitem.MenuItem.MenuItemPrice" Title="MenuItemPrice" />
    <PropertyColumn Property="orderitem => orderitem.Order.OrderTotal" Title="OrderTotal" />

    <TemplateColumn Context="orderitem">
        <a href="@($"orderitems/edit?id={orderitem.Id}")">Edit</a> |
        <a href="@($"orderitems/details?id={orderitem.Id}")">Details</a> |
        <a href="@($"orderitems/delete?id={orderitem.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private BIGBACKContext context = default!;
    private List<OrderItem> orderItems = new();

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();

        // Eagerly load related entities
        orderItems = context.OrderItem
            .Include(oi => oi.MenuItem) // Load MenuItem to access MenuItemName and MenuItemPrice
            .Include(oi => oi.Order)   // Load Order to access OrderTotal
            .ToList();
    }


    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
